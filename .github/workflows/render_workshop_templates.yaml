name: Render Terraform templates
on:
  workflow_dispatch:
    inputs:
      service_name:
        description: 'Service Name'
        required: true
        type: string

  workflow_call:
    inputs:
      service_name:
        required: true
        description: 'Service Name'
        type: string
    outputs:
      pr_url:
        description: "URL to the raised Pull Request"
        value: ${{ jobs.create_environment_terraform.outputs.pr_url }}

env:
  WORKING_DIR: terraform-templates/terraform
  TEMPLATE_DIR: terraform-templates/templates/k8s/workshop
  REPO_NAME: is-${{ inputs.service_name }}

jobs:
  create_environment_terraform:
    name: Create Environment Terraform
    runs-on: ubuntu-latest
    outputs:
      pr_url: ${{ steps.create_pull_request.outputs.pr_url }}
    steps:
      - name: Check out code
        uses: actions/checkout@v5
        with:
          repository: canonical/terraform-templates
          path: terraform-templates
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Create working directory and files
        run: |
          mkdir ${{ env.WORKING_DIR }}
          cd ${{ env.WORKING_DIR }}
          touch backend.tf main.tf versions.tf variables.tf providers.tf

      - name: Setup README.md
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: ${{ env.TEMPLATE_DIR }}/readme.tf.j2
          output_file: ${{ env.WORKING_DIR }}/README.md
          strict: true
          variables: |
            service_name=${{ inputs.service_name }}

      - name: Setup backend.tf
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: ${{ env.TEMPLATE_DIR }}/backend.tf.j2
          output_file: ${{ env.WORKING_DIR }}/backend.tf
          strict: true
          variables: |
            service_name=${{ inputs.service_name }}

      - name: Setup versions
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: ${{ env.TEMPLATE_DIR }}/versions.tf.j2
          output_file: ${{ env.WORKING_DIR }}/versions.tf
          strict: true
          variables: |
            service_name=${{ inputs.service_name }}

      - name: Setup variables
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: ${{ env.TEMPLATE_DIR }}/variables.tf.j2
          output_file: ${{ env.WORKING_DIR }}/variables.tf
          strict: true
          variables: |
            service_name=${{ inputs.service_name }}

      - name: Setup providers
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: ${{ env.TEMPLATE_DIR }}/providers.tf.j2
          output_file: ${{ env.WORKING_DIR }}/providers.tf
          strict: true
          variables: |
            service_name=${{ inputs.service_name }}

      - name: Setup application
        uses: cuchi/jinja2-action@v1.3.0
        with:
          template: ${{ env.TEMPLATE_DIR }}/main.tf.j2
          output_file: ${{ env.WORKING_DIR }}/main.tf
          strict: true
          variables: |
            service_name=${{ inputs.service_name }}

      - name: Set identity
        run: |
          git config --global user.email "canonical-is-bot@canonical.com"
          git config --global user.name "Canonical IS Bot"

      - name: Checkout env repo
        uses: actions/checkout@v5
        with:
          repository: canonical/${{env.REPO_NAME}}
          path: remote-repo
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Commit and push changes
        working-directory: remote-repo
        run: |
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          BRANCH="terraform-template-${{ inputs.service_name }}-${GIT_HASH}"
          echo "BRANCH=${BRANCH?}" >> "$GITHUB_ENV"
          git checkout -b ${BRANCH?}
          cp -rT ../${{ env.WORKING_DIR }} .
          git add .
          git commit -m "Add terraform project template for ${{ inputs.service_name }}"
          # git remote set-url origin https://${{ secrets.REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com/canonical/${{ env.REPO_NAME }}.git
          git remote -v
          git push -v origin ${BRANCH?}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Create pull request
        id: create_pull_request
        run: |
          PR_URL=$(gh pr create --repo canonical/${{ env.REPO_NAME }} -B main -H "canonical:${BRANCH?}" --title "[AUTO] Add terraform project template for ${{ inputs.service_name }}" --body 'Created by Github action')
          echo "pr_url=${PR_URL}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
