name: Create Application Terraform
on:
  workflow_dispatch:
    inputs:
      env_name:
        description: 'Environment Name'
        required: true
        type: string
      env_owner:
        description: 'Environment Owner'
        required: true
        type: string
      env_cloud:
        description: 'Environment Cloud'
        default: 'ps6'
        type: choice
        options:
          - 'ps5'
          - 'ps6'
      application_name:
        description: 'Application Name'
        required: true
        default: 'base'
        type: choice
        options:
          - 'base'
          - 'hello-kubecon'
          - 'synapse'
      application_type:
        description: 'Application type'
        default: 'k8s'
        type: choice
        options:
          - 'k8s'
          - 'machine'
  workflow_call:
    inputs:
      env_name:
        required: true
        description: 'Environment Name'
        type: string
      env_owner:
        description: 'Environment Owner'
        required: true
        type: string
      env_cloud:
        description: 'Environment Cloud (ps5 or ps6)'
        default: 'ps6'
        type: string
      application_name:
        description: 'Application Name. E.g.: base, hello-kubecon'
        required: true
        default: 'base'
        type: string
      application_type:
        description: 'Application type (k8s or machine)'
        default: 'k8s'
        type: string
    outputs:
      pr_url:
        description: "URL to the raised Pull Request"
        value: ${{ jobs.create_environment_terraform.outputs.pr_url }}

env:
  WORKING_DIR: terraform
  TEMPLATE_DIR: terraform-templates/templates/${{ inputs.application_type }}
  REPO_NAME: is-${{ inputs.env_name}}

jobs:
  create_environment_terraform:
    name: Create Environment Terraform
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          repository: canonical/terraform-templates
          path: terraform-templates
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Create working directory and files
        working-directory: terraform-templates
        run: |
          mkdir ${{ env.WORKING_DIR }}
          cd ${{ env.WORKING_DIR }}
          touch backend.tf locals.tf main.tf

      - name: Setup backend.tf
        uses: cuchi/jinja2-action@v1.2.2
        with:
          template: ${{ env.TEMPLATE_DIR }}/base/backend.tf.j2
          output_file: ${{ env.WORKING_DIR }}/backend.tf
          strict: true
          variables: |
            env_cloud=${{ inputs.env_cloud }}
            env_name=${{ inputs.env_name }}
            env_owner=${{ inputs.env_owner }}

      - name: Setup locals.tf
        uses: cuchi/jinja2-action@v1.2.2
        with:
          template: ${{ env.TEMPLATE_DIR }}/base/locals.tf.j2
          output_file: ${{ env.WORKING_DIR }}/locals.tf
          strict: true
          variables: |
            env_cloud=${{ inputs.env_cloud }}
            env_name=${{ inputs.env_name }}

      - name: Setup application
        uses: cuchi/jinja2-action@v1.2.2
        with:
          template: ${{ env.TEMPLATE_DIR }}/${{ inputs.application_name }}/main.tf.j2
          output_file: ${{ env.WORKING_DIR }}/main.tf
          strict: true

      - name: Set identity
        run: |
          git config --global user.email "canonical-is-bot@canonical.com"
          git config --global user.name "Canonical IS Bot"

      - name: Checkout env repo
        uses: actions/checkout@v4
        with:
          repository: canonical/${{env.REPO_NAME}}
          path: remote-repo
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Commit and push changes
        working-directory: remote-repo
        run: |
          GIT_HASH=$(git rev-parse --short "$GITHUB_SHA")
          BRANCH="terraform-template-${{ inputs.env_name }}-${GIT_HASH}"
          echo "BRANCH=${BRANCH?}" >> "$GITHUB_ENV"
          git checkout -b ${BRANCH?}
          cp -r ../${{ env.WORKING_DIR }} terraform
          git add .
          git commit -m "Add terraform project template for ${{ inputs.env_name }}"
          # git remote set-url origin https://${{ secrets.REPO_ACCESS_TOKEN }}:x-oauth-basic@github.com/canonical/${{ env.REPO_NAME }}.git
          git remote -v
          git push -v origin ${BRANCH?}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Create pull request
        id: create_pull_request
        run: |
          PR_URL=$(gh pr create --repo canonical/${{ env.REPO_NAME }} -B main -H "canonical:${BRANCH?}" --title "[AUTO] Add terraform project template for ${{ inputs.env_name }}" --body 'Created by Github action')
          echo "pr_url=${PR_URL}" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
